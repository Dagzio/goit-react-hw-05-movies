{"version":3,"file":"static/js/297.d6068f3d.chunk.js","mappings":"4PAGaA,EAAYC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIrBC,GAAgBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAgBK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iEAMhCI,GAAYN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAgBQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4B,iHCX5BO,EAAcT,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6TAe1BQ,EAAeV,EAAAA,GAAAA,OAAaK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gWAe5BS,EAAgBX,EAAAA,GAAAA,KAAWQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kC,SCFxC,EA3BkB,SAAHU,GAAsB,IAAhBC,EAAQD,EAARC,SACnBC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAUlC,OACEI,EAAAA,EAAAA,MAACT,EAAa,CAACE,SALQ,SAAAQ,GACvBA,EAAEC,iBACFT,EAASK,EAAYK,OACvB,EAE4CC,SAAA,EACxCC,EAAAA,EAAAA,KAAChB,EAAW,CACViB,KAAK,OACLC,KAAK,cACLC,WAAS,EACTC,YAAY,yBACZC,SAfe,SAAAT,GACnBF,EAAeE,EAAEU,OAAOC,MAC1B,EAcMA,MAAOd,EACPe,UAAQ,KAEVR,EAAAA,EAAAA,KAACf,EAAY,CAACgB,KAAK,SAAQF,SAAC,aAGlC,E,4CCkBA,EAxCe,WAAO,IAADU,EACnBpB,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCqB,EAAMnB,EAAA,GAAEoB,EAASpB,EAAA,GACxBqB,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAtB,EAAAA,EAAAA,GAAAoB,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAiC,QAA5BR,EAAGM,EAAaG,IAAI,gBAAQ,IAAAT,EAAAA,EAAI,GAC3CU,GAAoC7B,EAAAA,EAAAA,UAAS2B,GAAMG,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJJ,IACFK,EAAAA,EAAAA,IAAiBL,GACdM,MAAK,SAAAC,GAAQ,OAAIjB,EAAUiB,EAASC,KAAKC,QAAQ,IACjDC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAM,GAE1C,GAAG,CAACX,IAOJ,OACE1B,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAACkC,EAAS,CAAC9C,SARM,SAAAK,GACfA,IACF6B,EAAc7B,GACduB,EAAgB,CAAEC,MAAOxB,IAE7B,KAIIO,EAAAA,EAAAA,KAAA,MAAAD,SACGW,GACCA,EAAOyB,KAAI,SAAAC,GACT,OACEzC,EAAAA,EAAAA,MAACjB,EAAAA,GAAa,CAAAqB,SAAA,EACZC,EAAAA,EAAAA,KAACqC,EAAAA,IAAO,CAACC,MAAM,aACftC,EAAAA,EAAAA,KAACnB,EAAAA,GAAS,CAAC0D,GAAE,GAAAC,OAAKJ,EAAMK,IAAMC,MAAO,CAAEC,KAAMpB,GAAWxB,SACrDqC,EAAMQ,UAHSR,EAAMK,GAO9B,QAIV,C","sources":["pages/Home/Home.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { InfoItem, InfoLink } from 'pages/MovieDetails/MovieDetails.styled';\nimport { styled } from 'styled-components';\n\nexport const HomeTitle = styled.h1`\n  margin-bottom: 24px;\n`;\n\nexport const MovieListItem = styled(InfoItem)`\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const MovieLink = styled(InfoLink)`\n  color: #0f0f94;\n`;\n","import { styled } from 'styled-components';\n\nexport const SearchInput = styled.input`\n  width: 320px;\n  height: 32px;\n  margin-right: 12px;\n  border-radius: 10px;\n  border: 1px solid lightgrey;\n  padding: 8px 10px;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -1px,\n    rgba(0, 0, 0, 0.14) 0px 4px 5px 0px, rgba(0, 0, 0, 0.12) 0px 1px 10px 0px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  width: 80px;\n  height: 32px;\n  border: transparent;\n  cursor: pointer;\n  border-radius: 16px;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -1px,\n    rgba(0, 0, 0, 0.14) 0px 4px 5px 0px, rgba(0, 0, 0, 0.12) 0px 1px 10px 0px;\n\n  &:active {\n    box-shadow: inset 2px 2px 5px 0px rgba(0, 0, 0, 0.5);\n    background-color: grey;\n  }\n`;\n\nexport const SearchbarForm = styled.form`\n  margin-bottom: 24px;\n`;\n","import { useState } from 'react';\nimport { SearchButton, SearchInput, SearchbarForm } from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchQuery.trim());\n  };\n  return (\n    <SearchbarForm onSubmit={handleFormSubmit}>\n      <SearchInput\n        type=\"text\"\n        name=\"searchQuery\"\n        autoFocus\n        placeholder=\"Search a movie by name\"\n        onChange={handleChange}\n        value={searchQuery}\n        required\n      />\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </SearchbarForm>\n  );\n};\n\nexport default Searchbar;\n","import Searchbar from 'components/Searchbar/Searchbar';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieByName } from 'Api';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { BsStars } from 'react-icons/bs';\nimport { MovieLink, MovieListItem } from 'pages/Home/Home.styled';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [queryValue, setQueryValue] = useState(query);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (queryValue) {\n      fetchMovieByName(queryValue)\n        .then(response => setMovies(response.data.results))\n        .catch(error => console.error(error));\n    }\n  }, [queryValue]);\n  const handleSubmit = searchQuery => {\n    if (searchQuery) {\n      setQueryValue(searchQuery);\n      setSearchParams({ query: searchQuery });\n    }\n  };\n  return (\n    <div>\n      <Searchbar onSubmit={handleSubmit} />\n      <ul>\n        {movies &&\n          movies.map(movie => {\n            return (\n              <MovieListItem key={movie.id}>\n                <BsStars color=\"#d88d02\" />\n                <MovieLink to={`${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </MovieLink>\n              </MovieListItem>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["HomeTitle","styled","_templateObject","_taggedTemplateLiteral","MovieListItem","InfoItem","_templateObject2","MovieLink","InfoLink","_templateObject3","SearchInput","SearchButton","SearchbarForm","_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_jsxs","e","preventDefault","trim","children","_jsx","type","name","autoFocus","placeholder","onChange","target","value","required","_searchParams$get","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","_useState3","_useState4","queryValue","setQueryValue","location","useLocation","useEffect","fetchMovieByName","then","response","data","results","catch","error","console","Searchbar","map","movie","BsStars","color","to","concat","id","state","from","title"],"sourceRoot":""}